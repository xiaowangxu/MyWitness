[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://cuftf8iel3754"]

[sub_resource type="Shader" id="Shader_gp7d5"]
code = "shader_type spatial;
render_mode cull_disabled;

uniform vec4 color : source_color;

void fragment() {
//	vec4 world_pos = inverse(WORLD_MATRIX) * CAMERA_MATRIX * vec4(VERTEX, 1.0);
//	vec2 world_coor = vec2(world_pos.r, world_pos.b) * basecolor_scale;
//	vec2 new_world_coor = rotateUV(world_coor, basecolor_pivot, basecolor_angle);
	ALBEDO =  color.rgb;//texture(basecolor_tex, new_world_coor).rgb * texture(color_tex, UV).rgb;
	METALLIC = 0.0;
	ROUGHNESS = 1.0;
	SPECULAR = 0.0;
}

void light() {
//	DIFFUSE_LIGHT += ALBEDO * (vec3(1.0, 1.0, 1.0) - ((vec3(1.0, 1.0, 1.0) - ATTENUATION) * shadow_intensity)) * (ATTENUATION * LIGHT_COLOR * light_intensity);//ATTENUATION  * LIGHT_COLOR) * light_intensity;
	DIFFUSE_LIGHT += ALBEDO * ATTENUATION * LIGHT_COLOR;//ATTENUATION  * LIGHT_COLOR) * light_intensity; //ATTENUATION * LIGHT_COLOR * light_intensity;//ATTENUATION  * LIGHT_COLOR) * light_intensity;
}"

[resource]
render_priority = 0
shader = SubResource("Shader_gp7d5")
shader_param/color = Color(0.537255, 0.556863, 0.141176, 1)
